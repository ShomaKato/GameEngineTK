///-------------------------------------------------------------------
//*
//*	@作成日		2017/06/19
//*
//*	@名前		CollisionNode.cpp
//*
//* @役割		衝突判定のクラス
//*
//*	@著者		加藤 彰馬
//*
///-------------------------------------------------------------------

// ヘッダのインクルード
#include "pch.h"
#include "CollisionNode.h"

// 名前空間
using namespace DirectX::SimpleMath;



////----------------------------------------------------------------------
////! @関数名：SetParent
////!
////! @役割：当たり判定をモデルに親子付する
////!
////! @引数：球A(Sphere)と球B(Sphere)
////!
////! @戻り値：ヒットしたか否か
////----------------------------------------------------------------------
void CollisionNode::SetParent(Obj3d * parent)
{
	// 自分の親を、親に登録
	m_obj.SetParent(parent);
}



//* ぶっちゃけ、メンバ変数の初期化のためだけに作る
SphereNode::SphereNode()
{
	// デフォルト半径を１メートルに
	m_localRadius = 1.0f;
}

////----------------------------------------------------------------------
////! @関数名：Initialize
////!
////! @役割：球状当たり判定の初期化
////!
////! @引数：なし(void)
////!
////! @戻り値：なし(void)
////----------------------------------------------------------------------
void SphereNode::Initialize()
{
	// デバッグ用表示モデルを読み込む
	m_obj.LoadModel(L"Resources\\SphereNode.cmo");
}

////----------------------------------------------------------------------
////! @関数名：Update
////!
////! @役割：球状当たり判定の更新
////!
////! @引数：なし(void)
////!
////! @戻り値：なし(void)
////----------------------------------------------------------------------
void SphereNode::Update()
{
	m_obj.SetTranslation(m_Trans);
	m_obj.SetScale(Vector3(m_localRadius));	/* ローカル半径はvector3ではないので必要 */

	m_obj.Update();
}

////----------------------------------------------------------------------
////! @関数名：Draw
////!
////! @役割：球状当たり判定の描画
////!
////! @引数：なし(void)
////!
////! @戻り値：なし(void)
////----------------------------------------------------------------------
void SphereNode::Draw()
{
	m_obj.Draw();
}
